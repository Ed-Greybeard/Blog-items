/*
Bookmark by Filename
Takes a list of filenames
Bookmarks entries with that name!

Not especially big or clever but will work in a pinch.
*/
class MainClass {

  //-------------------------------------------------------------
  // Global Variables
  //-------------------------------------------------------------

  String                                        ScriptName,
                                                BookmarkFolderName;
  BookmarkFolderClass                           MainFolder;
  uint                                          HitCounter,
                                                MissCounter;
  //-------------------------------------------------------------
  // Main
  //-------------------------------------------------------------

  void Main(CaseClass c) {
    SystemClass::ClearConsole(1);
    ScriptName = "BookmarkbyFilename";
    // if we have a case open..
    if (c)
    {

      // .. and the case has evidence..
      if (c.EntryRoot().FirstChild())
      {
        // box title
        String boxTitle = "Bookmark by Filename EnScript";
        // default box text
        String fileName(String::Format("{0}\\input.txt", c.ExportFolder()));
        // form input title
        String formTitle = "File containing the filenames:";

        DialogClass dialog(null, boxTitle);
        StringEditClass stringEdit(dialog,                          // parent WindowClass object
                                   formTitle,                       // form name
                                   WindowClass::START,              // x position (left co-ord)
                                   WindowClass::START,              // y position (top co-ord)
                                   200,                             // width
                                   WindowClass::DEFAULT,            // height
                                   0,                               // box style
                                   fileName,                        // default text
                                   -1,                              // maximum text length (-1 is "no limit")
                                   WindowClass::REQUIRED | WindowClass::FILEOPEN); // WindowClass::FILEOPEN gives the file open option


        // execute the box
        if (dialog.Execute() != SystemClass::OK)
        {
          // if anything other than "OK" is clicked, then exit
          Log("Script Cancelled");
          SystemClass::Exit(1);
        }


        LocalFileClass input();

        if (input.Open(fileName, FileClass::TEXTCRLF))
        {
          HitCounter = 0;
          MissCounter = 0;

          Log(String::Format("Input file opened successfully: {0}", fileName));

          BookmarkFolderName = String::Format("{0} - {1}", ScriptName, fileName.GetFilename());
          MainFolder = new BookmarkFolderClass(c.BookmarkRoot(), BookmarkFolderName);

          String line();

          while (input.ReadString(line, -1, "\r\n") && line)
          {
            // process each line
            int checker;
            forall (EntryClass e in c.EntryRoot())
            {
              if (e.Name() == line)
              {
                Log(String::Format("Found: {0}", e.Name()));
                MainFolder.AddBookmark(e,                              // Entry
                                   0,                              // Offset within entry
                                   1,                              // Size (in bytes)
                                   "",                             // Comment
                                   BookmarkClass::SHOWREPORT,      // Options
                                   BookmarkClass::PICTURE);        // Viewtypes

                HitCounter++;
                checker = 1;
              }
            }

            // if we have had no hits, report a missed hit
            if (checker != 1)
            {
              Log(String::Format("Missed: {0}", line));
              MissCounter++;
            }


          }

          Log("");
          Log("SEARCH COMPLETE");
          Log(String::Format("Number of hits: {0}", HitCounter));
          Log(String::Format("Number of misses: {0}", MissCounter));

        } // if (input.Open(fileName, FileClass::TEXTCRLF))
        else
        {
          Log(String::Format("Unable to open file: {0}", fileName));
          SystemClass::Exit(1);
        }
      } // if (c.EntryRoot().FirstChild())
      else
      {
        Log("No evidence!");
      }
    } // if (c)
    else
    {
      Log("No case!");
    }
  } // End MAIN


  //-------------------------------------------------------------
  // Log
  //-------------------------------------------------------------

  void Log(const String &message)
  {
    DateClass date();
    date.Now();
    Console.WriteLine("[{0}] [{1}] {2}", date.GetString(), ScriptName, message);
  }

} // End Class MainClass
